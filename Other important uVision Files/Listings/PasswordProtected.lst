C51 COMPILER V9.60.0.0   PASSWORDPROTECTED                                                 05/09/2020 01:45:42 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE PASSWORDPROTECTED
OBJECT MODULE PLACED IN .\Objects\PasswordProtected.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE PasswordProtected.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\PasswordProtected.lst) TABS(2) OBJECT(.\Objects\PasswordProtected.obj)

line level    source

   1          //This program runs motors in different directions per second
   2          #include <reg51.h>
   3          sbit r1 = P1^0;
   4          sbit r2 = P1^7;
   5          sbit r3 = P1^2;
   6          sbit r4 = P1^3;
   7          sbit c1 = P1^4;
   8          sbit c2 = P1^5;
   9          sbit c3 = P1^6;
  10          //4x3 keypad connections//
  11          
  12          sbit m1p = P3^3;
  13          sbit m1n = P3^4;
  14          sbit m2p = P3^5;
  15          sbit m2n = P3^6;
  16          //Motor input line connections//
  17          
  18          sbit rs = P3^0;
  19          sbit rw = P3^1;
  20          sbit en = P3^2;
  21          //LCD Control lines
  22          
  23          void lcdcmd(unsigned char);
  24          void lcddat(unsigned char);
  25          void lcddis(unsigned char *, unsigned char);
  26          void check();
  27          void delay();
  28          unsigned char pwd[4], x;
  29          
  30          void main()
  31          {
  32   1      lcdcmd(0x38);  //0x38, to configure the LCD for 2-line, 5×7 font and 8-bit operation mode
  33   1      lcdcmd(0x01);  //clear screen
  34   1      lcdcmd(0x10);  //display on, cursor blinking
  35   1      lcdcmd(0x0c);  //shift cursor position to right (display on & cursor off)
  36   1      lcdcmd(0x80);  // to set cursor position at first block of the first line of LCD
  37   1      lcddis("PASSWORD PROTECTION", 19);
  38   1      lcdcmd(0xc0);  //To pass to next line
  39   1      lcddis("       SYSTEM       ", 20);
  40   1      delay(); delay(); delay();
  41   1      lcdcmd(0x01);  //clear screen'
  42   1      lcddis("ENTER PASSWORD:  ", 19);
  43   1      lcdcmd(0xc0);
  44   1        while(1)
  45   1          {
  46   2            r1 = 0;
  47   2            if(c1 == 0)
  48   2            {
  49   3              pwd[x] = '1';
  50   3              delay(); delay(); delay(); delay(); delay(); delay();  delay(); 
  51   3              lcddat('*');
  52   3              x = x+1;
  53   3            }
  54   2            if(c2 == 0)
C51 COMPILER V9.60.0.0   PASSWORDPROTECTED                                                 05/09/2020 01:45:42 PAGE 2   

  55   2            {
  56   3              pwd[x] = '2';
  57   3              delay(); delay(); delay(); delay(); delay(); delay(); delay();
  58   3              lcddat('*');
  59   3              x = x+1;
  60   3            }
  61   2            if(c3 == 0)
  62   2            {
  63   3              pwd[x] = '3';
  64   3              delay(); delay(); delay(); delay(); delay(); delay(); delay();
  65   3              lcddat('*');
  66   3              x = x+1;
  67   3            }
  68   2            r2 = 0; 
  69   2            r1 = 1;
  70   2            if(c1 == 0)
  71   2            {
  72   3              pwd[x] = '4';
  73   3              delay(); delay(); delay(); delay(); delay(); delay(); delay();
  74   3              lcddat('*');
  75   3              x = x+1;
  76   3            }
  77   2            if(c2 == 0)
  78   2            {
  79   3              pwd[x] = '5';
  80   3              delay(); delay(); delay(); delay(); delay(); delay(); delay();
  81   3              lcddat('*');
  82   3              x = x+1;
  83   3            }
  84   2            if(c3 == 0)
  85   2            {
  86   3              pwd[x] = '6';
  87   3              delay(); delay(); delay(); delay(); delay(); delay(); delay();
  88   3              lcddat('*');
  89   3              x = x+1;
  90   3            }
  91   2            r3 = 0; 
  92   2            r2 = 1;
  93   2            if(c1 == 0)
  94   2            {
  95   3              pwd[x] = '7';
  96   3              delay(); delay(); delay(); delay(); delay(); delay(); delay();
  97   3              lcddat('*');
  98   3              x = x+1;
  99   3            }
 100   2            if(c2 == 0)
 101   2            {
 102   3              pwd[x] = '8';
 103   3              delay(); delay(); delay(); delay(); delay(); delay(); delay();
 104   3              lcddat('*');
 105   3              x = x+1;
 106   3            }
 107   2            if(c3 == 0)
 108   2            {
 109   3              pwd[x] = '9';
 110   3              delay(); delay(); delay(); delay(); delay(); delay(); delay();
 111   3              lcddat('*');
 112   3              x = x+1;
 113   3            }
 114   2            r4 = 0; r3 = 1;
 115   2            if(c1 == 0)
 116   2            {
C51 COMPILER V9.60.0.0   PASSWORDPROTECTED                                                 05/09/2020 01:45:42 PAGE 3   

 117   3              pwd[x] = '*';
 118   3              delay(); delay(); delay(); delay(); delay(); delay(); delay();
 119   3              lcddat('*');
 120   3              x = x+1;
 121   3            }
 122   2            if(c2 == 0)
 123   2            {
 124   3              pwd[x] = '0';
 125   3              delay(); delay(); delay(); delay(); delay(); delay(); delay();
 126   3              lcddat('*');
 127   3              x = x+1;
 128   3            }
 129   2            if(c3 == 0)
 130   2            {
 131   3              check();
 132   3              delay();
 133   3              delay(); 
 134   3              delay(); 
 135   3            }
 136   2            r4 = 1;
 137   2          }
 138   1      }
 139          
 140          void check()
 141          {
 142   1        unsigned int i;
 143   1        if(pwd[0]=='4'&&pwd[1]=='5'&&pwd[2]=='6'&&pwd[3]=='7')
 144   1        {
 145   2            
 146   2            lcdcmd(0x01);
 147   2            lcddis("  ACCESS GRANTED   ", 19);
 148   2            lcdcmd(0xc0);  //To pass to next line
 149   2            lcddis("   WELCOME HOME!   ", 20);
 150   2            i = 50;
 151   2            while(i--)
 152   2            {
 153   3            m1p = 1; m1n = 0;  //Opens doors
 154   3            m2p = 1; m2n = 0;  //Opens doors  
 155   3            delay();
 156   3            }
 157   2            i = 60;
 158   2            while(i--)
 159   2            {
 160   3            m1p = 0; m1n = 0;  //Stops for a while
 161   3            m2p = 0; m2n = 0;  //Stops for a while
 162   3            delay();
 163   3            }
 164   2            lcdcmd(0x01);
 165   2            lcddis("  DOORS CLOSING..   ", 20);
 166   2            i = 50;
 167   2            while(i--)
 168   2            {
 169   3            m1p = 0; m1n = 1;  //Closes the door
 170   3            m2p = 0; m2n = 1;  //Closes the door
 171   3            delay();
 172   3            } 
 173   2            lcdcmd(0x01);
 174   2            i = 40;
 175   2            while(i--)
 176   2            {
 177   3            m1p = 0; m1n = 0;  //Stops 
 178   3            m2p = 0; m2n = 0;  
C51 COMPILER V9.60.0.0   PASSWORDPROTECTED                                                 05/09/2020 01:45:42 PAGE 4   

 179   3            delay();
 180   3            }
 181   2        }
 182   1        else
 183   1        {
 184   2          lcdcmd(0x01);
 185   2          lcddis("   ACCESS DENIED!   ", 20);
 186   2        }
 187   1      }
 188          
 189          void lcdcmd(unsigned char val)
 190          {
 191   1        P2 = val;
 192   1        rs = 0;
 193   1        rw = 0;
 194   1        en = 1;
 195   1        delay();
 196   1        en = 0;
 197   1      }
 198          
 199          void lcddat(unsigned char dat)
 200          {
 201   1      P2 = dat;
 202   1      rs = 1 ;
 203   1      rw = 0;
 204   1      en = 1;
 205   1      delay();
 206   1      en = 0; 
 207   1      } 
 208          
 209          void lcddis(unsigned char *s, unsigned char r)
 210          {
 211   1        unsigned char w;
 212   1        for(w = 0; w<r; w++)
 213   1        {
 214   2          lcddat(s[w]);
 215   2          delay();
 216   2        }
 217   1      }
 218          
 219          void delay()
 220          { 
 221   1      unsigned int i, j;
 222   1      for(i = 0; i<8000; i++);
 223   1      for(j = 0; j<100; j++);
 224   1      
 225   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    858    ----
   CONSTANT SIZE    =    141    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
